@page "/plugins/podserver/podcasts/{podcastId}"
@using System.Globalization
@using BTCPayServer.Abstractions.Contracts
@using BTCPayServer.Plugins.PodServer.Authentication
@model BTCPayServer.Plugins.PodServer.Pages.Podcasts.PodcastModel
@inject IFileService FileService

@{
    ViewData.SetActivePage(PodServerNavPages.Podcast, Model.Podcast.Title, Model.Podcast.PodcastId);
}

<div class="sticky-header">
    <h2>@ViewData["Title"]</h2>
    <a asp-page="/Episodes/Create" asp-route-podcastId="@Model.Podcast.PodcastId" class="btn btn-primary" role="button" id="CreateEpisode" permission="@PodServerPolicies.CanManageEpisodes">
        Create an episode
    </a>
    <partial name="_PodcastSettingsNav" model="Model.Podcast.PodcastId"/>
</div>

<partial name="_StatusMessage" />

<div class="d-lg-flex gap-3">
    @if (!string.IsNullOrEmpty(Model.Podcast.ImageFileId))
    {
        <img src="@(await FileService.GetFileUrl(Request.GetAbsoluteRootUri(), Model.Podcast.ImageFileId))" alt="@Model.Podcast.Title" style="max-width: 200px;max-height: 200px;" class="d-block mb-3 w-150px"/>
    }
    <div class="description">
        @Html.Raw(Model.Podcast.Description)
    </div>
</div>

<a asp-controller="Public" asp-action="Podcast" asp-route-podcastSlug="@Model.Podcast.Slug" class="btn btn-secondary mb-4" role="button" target="_blank">Public Page</a>

@if (Model.Episodes.Any())
{
    <div class="table-responsive-md">
        <table class="table table-hover">
            <thead>
            <tr>
                <th>Date</th>
                <th>Title</th>
                <th class="text-end">Actions</th>
            </tr>
            </thead>
            <tbody id="PodcastEpisodes">
            @foreach (var episode in Model.Episodes)
            {
                <tr id="Episode-@episode.EpisodeId">
                    <td>
                        <a asp-page="/Episodes/Episode" asp-route-podcastId="@Model.Podcast.PodcastId" asp-route-episodeId="@episode.EpisodeId" class="episode">
                            @if (episode.PublishedAt != null)
                            {
                                <time datetime="@episode.PublishedAt?.ToString("o", CultureInfo.InvariantCulture)">
                                    @episode.PublishedAt?.ToTimeAgo()
                                </time>
                            }
                            else
                            {
                                <span class="text-danger">No publish date</span>
                            }
                        </a>
                    </td>
                    <td class="episode-title">@episode.Title</td>
                    <td class="text-end">
                        @if (episode.IsPublished)
                        {
                            <a asp-controller="Public" asp-action="Episode" asp-route-podcastSlug="@Model.Podcast.Slug" asp-route-episodeSlug="@episode.Slug" class="podcast-view" target="_blank">Public Page</a>
                            <span permission="@PodServerPolicies.CanManageEpisodes"> - </span>
                        }
                        <a asp-page="/Episodes/Edit" asp-route-podcastId="@episode.PodcastId" asp-route-episodeId="@episode.EpisodeId" class="episode-edit" permission="@PodServerPolicies.CanManageEpisodes">Edit</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}
else
{
    <p id="PodcastEpisodes" class="text-secondary">There are no episodes yet.</p>
}
