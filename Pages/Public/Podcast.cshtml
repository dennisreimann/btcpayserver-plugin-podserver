@page "/plugins/podserver/podcast/{podcastSlug}"
@using BTCPayServer.Abstractions.Contracts
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Globalization
@using BTCPayServer.Plugins.PodServer.Data.Models
@model PublicPodcastModel
@inject IFileService FileService

@{
    Layout = "_LayoutSimple";
    ViewData.SetActivePage(PodServerNavPages.Public, Model.Podcast.Title, Model.Podcast.PodcastId);
    var imageUrl = string.IsNullOrEmpty(Model.Podcast.ImageFileId) ? null : await FileService.GetFileUrl(Request.GetAbsoluteRootUri(), Model.Podcast.ImageFileId);
}

@section PageHeadContent {
    <partial name="_LayoutPodServerHead" />
}

@section PageFootContent {
    <partial name="_LayoutPodServerFoot" />
}

<main class="podserver-public">
    <div class="sticky-header-setup"></div>
    <div class="sticky-header d-flex flex-wrap align-items-center justify-content-between gap-3">
        <h1 class="mb-0">@ViewData["Title"]</h1>
        <div class="d-flex gap-3">
            <a asp-controller="Feed" asp-action="Feed" asp-route-podcastSlug="@Model.Podcast.Slug" class="btn btn-secondary" role="button" id="Feed">Subscribe</a>
        </div>
    </div>
    
    @if (imageUrl != null)
    {
        <img src="@imageUrl" alt="@Model.Podcast.Title" style="max-width: 200px;max-height: 200px;" class="d-block mb-3"/>
    }
    
    @Html.Raw(Model.Podcast.Description)
    
    @if (Model.LatestEpisode != null)
    {
        var player = new Player(Model.LatestEpisode, FileService);
        <h2 class="mt-5">Latest Episode</h2>
        <partial name="PodServerPlayer" model="@player"/>
    }
    else
    {
        <p id="PodcastEpisodes" class="text-secondary">There are no episodes yet.</p>
    }
    
    @if (Model.MoreEpisodes != null && Model.MoreEpisodes.Any())
    {
        <h2 class="mt-5 mb-4">More Episodes</h2>
        <div class="episodes">
            @foreach (var episode in Model.MoreEpisodes)
            {
                var coverUrl = string.IsNullOrEmpty(episode.ImageFileId) ? imageUrl : await FileService.GetFileUrl(Request.GetAbsoluteRootUri(), episode.ImageFileId);
                <article id="Episode-@episode.EpisodeId" class="episode-item">
                    @if (coverUrl != null)
                    {
                        <a asp-page="/Public/Episode" asp-route-podcastSlug="@Model.Podcast.Slug" asp-route-episodeSlug="@episode.Slug" class="episode-coverlink">
                            <img src="@coverUrl" alt="@episode.Title" />
                        </a>
                    }
                    <div class="episode-content">
                        <h3 class="episode-title">
                            <a asp-page="/Public/Episode" asp-route-podcastSlug="@Model.Podcast.Slug" asp-route-episodeSlug="@episode.Slug" class="episode-link">@episode.Title</a>
                        </h3>
                        <div class="episode-meta">
                            <time class="episode-published" datetime="@episode.PublishedAt?.ToString("o", CultureInfo.InvariantCulture)">
                                @episode.PublishedAt?.ToTimeAgo()
                            </time>
                        </div>
                    </div>
                </article>
            }
        </div>
    }

</main>
